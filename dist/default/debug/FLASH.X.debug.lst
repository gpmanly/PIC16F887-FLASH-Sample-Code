

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Aug 02 10:52:59 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.42
    20                           ; Generated 13/04/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131                           
   132                           	psect	idataCOMMON
   133  0653                     __pidataCOMMON:	
   134                           
   135                           ;initializer for main@F1852
   136  0653  341E               	retlw	30
   137  0654  3480               	retlw	128
   138                           
   139                           	psect	idataBANK0
   140  0692                     __pidataBANK0:	
   141                           
   142                           ;initializer for main@F1849
   143  0692  3400               	retlw	0
   144  0693  3441               	retlw	65
   145  0694  3400               	retlw	0
   146  0695  3442               	retlw	66
   147  0696  3400               	retlw	0
   148  0697  3443               	retlw	67
   149  0698  3400               	retlw	0
   150  0699  3444               	retlw	68
   151  069A  3400               	retlw	0
   152  069B  3445               	retlw	69
   153  069C  3400               	retlw	0
   154  069D  3446               	retlw	70
   155  069E  3400               	retlw	0
   156  069F  3447               	retlw	71
   157  06A0  3400               	retlw	0
   158  06A1  3448               	retlw	72
   159                           
   160                           ;initializer for main@F1866
   161  06A2  341E               	retlw	30
   162  06A3  3487               	retlw	135
   163                           
   164                           ;initializer for main@F1864
   165  06A4  341E               	retlw	30
   166  06A5  3486               	retlw	134
   167                           
   168                           ;initializer for main@F1862
   169  06A6  341E               	retlw	30
   170  06A7  3485               	retlw	133
   171                           
   172                           ;initializer for main@F1860
   173  06A8  341E               	retlw	30
   174  06A9  3484               	retlw	132
   175                           
   176                           ;initializer for main@F1858
   177  06AA  341E               	retlw	30
   178  06AB  3483               	retlw	131
   179                           
   180                           ;initializer for main@F1856
   181  06AC  341E               	retlw	30
   182  06AD  3482               	retlw	130
   183                           
   184                           ;initializer for main@F1854
   185  06AE  341E               	retlw	30
   186  06AF  3481               	retlw	129
   187  0003                     _STATUSbits	set	3
   188  000B                     _INTCONbits	set	11
   189  005F                     _GIE	set	95
   190  008F                     _OSCCONbits	set	143
   191  010C                     _EEDAT	set	268
   192  010E                     _EEDATH	set	270
   193  010C                     _EEDATA	set	268
   194  010F                     _EEADRH	set	271
   195  010D                     _EEADR	set	269
   196  018D                     _EECON2	set	397
   197  018C                     _EECON1bits	set	396
   198  0C60                     _RD	set	3168
   199  0C67                     _EEPGD	set	3175
   200                           
   201                           ; #config settings
   202  0000                     
   203                           	psect	cinit
   204  07E4                     start_initialization:	
   205  07E4                     __initialization:	
   206                           
   207                           ; Initialize objects allocated to BANK0
   208  07E4  1383               	bcf	3,7	;select IRP bank0
   209  07E5  306C               	movlw	low (__pdataBANK0+30)
   210  07E6  00FD               	movwf	btemp+-1
   211  07E7  3006               	movlw	high __pidataBANK0
   212  07E8  00FE               	movwf	btemp
   213  07E9  3092               	movlw	low __pidataBANK0
   214  07EA  00FF               	movwf	btemp+1
   215  07EB  304E               	movlw	low __pdataBANK0
   216  07EC  0084               	movwf	4
   217  07ED  120A  118A  2668  120A  118A  	fcall	init_ram0
   218                           
   219                           ; Initialize objects allocated to COMMON
   220  07F2  120A  118A  2653  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   221  07F7  00FC               	movwf	__pdataCOMMON& (0+127)
   222  07F8  120A  118A  2654   	fcall	__pidataCOMMON+1	;fetch initializer
   223  07FB  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
   224  07FC                     end_of_initialization:	
   225                           ;End of C runtime variable initialization code
   226                           
   227  07FC                     __end_of__initialization:	
   228  07FC  0183               	clrf	3
   229  07FD  120A  118A  2F00   	ljmp	_main	;jump to C main() function
   230                           
   231                           	psect	dataCOMMON
   232  007C                     __pdataCOMMON:	
   233  007C                     main@F1852:	
   234  007C                     	ds	2
   235                           
   236                           	psect	dataBANK0
   237  004E                     __pdataBANK0:	
   238  004E                     main@F1849:	
   239  004E                     	ds	16
   240  005E                     main@F1866:	
   241  005E                     	ds	2
   242  0060                     main@F1864:	
   243  0060                     	ds	2
   244  0062                     main@F1862:	
   245  0062                     	ds	2
   246  0064                     main@F1860:	
   247  0064                     	ds	2
   248  0066                     main@F1858:	
   249  0066                     	ds	2
   250  0068                     main@F1856:	
   251  0068                     	ds	2
   252  006A                     main@F1854:	
   253  006A                     	ds	2
   254                           
   255                           	psect	inittext
   256  0664                     init_fetch0:	
   257                           ;	Called with low address in FSR and high address in W
   258                           
   259  0664  087E               	movf	126,w
   260  0665  008A               	movwf	10
   261  0666  087F               	movf	127,w
   262  0667  0082               	movwf	2
   263  0668                     init_ram0:	
   264                           ;Called with:
   265                           ;	high address of idata address in btemp 
   266                           ;	low address of idata address in btemp+1 
   267                           ;	low address of data in FSR
   268                           ;	high address + 1 of data in btemp-1
   269                           
   270  0668  2664  120A  118A   	fcall	init_fetch0
   271  066B  0080               	movwf	0
   272  066C  0A84               	incf	4,f
   273  066D  0804               	movf	4,w
   274  066E  067D               	xorwf	125,w
   275  066F  1903               	btfsc	3,2
   276  0670  3400               	retlw	0
   277  0671  0AFF               	incf	127,f
   278  0672  1903               	btfsc	3,2
   279  0673  0AFE               	incf	126,f
   280  0674  2E68               	goto	init_ram0
   281                           
   282                           	psect	cstackCOMMON
   283  0071                     __pcstackCOMMON:	
   284  0071                     ?_initSystem:	
   285  0071                     ??_initSystem:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0071                     ?_readFLASH:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0071                     ?_initOSC:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0071                     ??_initOSC:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0071                     ?_writeFLASHWr8:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0071                     writeFLASHWr8@addr:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0071                     readFLASH@addr:	
   304                           ; 2 bytes @ 0x0
   305                           
   306                           
   307                           ; 2 bytes @ 0x0
   308  0071                     	ds	2
   309  0073                     writeFLASHWr8@PMBYTE:	
   310  0073                     readFLASH@PMBYTE:	
   311                           ; 1 bytes @ 0x2
   312                           
   313                           
   314                           ; 1 bytes @ 0x2
   315  0073                     	ds	1
   316  0074                     ??_readFLASH:	
   317  0074                     ??_writeFLASHWr8:	
   318                           ; 1 bytes @ 0x3
   319                           
   320                           
   321                           ; 1 bytes @ 0x3
   322  0074                     	ds	2
   323  0076                     writeFLASHWr8@i:	
   324                           
   325                           ; 2 bytes @ 0x5
   326  0076                     	ds	2
   327  0078                     ?_main:	
   328  0078                     main@argc:	
   329                           ; 2 bytes @ 0x7
   330                           
   331                           
   332                           ; 2 bytes @ 0x7
   333  0078                     	ds	2
   334  007A                     main@argv:	
   335                           
   336                           ; 2 bytes @ 0x9
   337  007A                     	ds	2
   338                           
   339                           	psect	cstackBANK0
   340  0020                     __pcstackBANK0:	
   341  0020                     ??_main:	
   342                           
   343                           ; 1 bytes @ 0x0
   344  0020                     	ds	4
   345  0024                     main@Chix:	
   346                           
   347                           ; 16 bytes @ 0x4
   348  0024                     	ds	16
   349  0034                     main@Van:	
   350                           
   351                           ; 8 bytes @ 0x14
   352  0034                     	ds	8
   353  003C                     main@sta_rosa:	
   354                           
   355                           ; 2 bytes @ 0x1C
   356  003C                     	ds	2
   357  003E                     main@binan:	
   358                           
   359                           ; 2 bytes @ 0x1E
   360  003E                     	ds	2
   361  0040                     main@san_pedro:	
   362                           
   363                           ; 2 bytes @ 0x20
   364  0040                     	ds	2
   365  0042                     main@calamba:	
   366                           
   367                           ; 2 bytes @ 0x22
   368  0042                     	ds	2
   369  0044                     main@los_banos:	
   370                           
   371                           ; 2 bytes @ 0x24
   372  0044                     	ds	2
   373  0046                     main@cabuyao:	
   374                           
   375                           ; 2 bytes @ 0x26
   376  0046                     	ds	2
   377  0048                     main@san_pablo:	
   378                           
   379                           ; 2 bytes @ 0x28
   380  0048                     	ds	2
   381  004A                     main@sta_cruz:	
   382                           
   383                           ; 2 bytes @ 0x2A
   384  004A                     	ds	2
   385  004C                     main@GP:	
   386                           
   387                           ; 2 bytes @ 0x2C
   388  004C                     	ds	2
   389                           
   390                           	psect	maintext
   391  0700                     __pmaintext:	
   392 ;;
   393 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   394 ;;
   395 ;; *************** function _main *****************
   396 ;; Defined at:
   397 ;;		line 113 in file "main.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;  argc            2    7[COMMON] int 
   400 ;;  argv            2    9[COMMON] PTR PTR unsigned char 
   401 ;; Auto vars:     Size  Location     Type
   402 ;;  Chix           16    4[BANK0 ] struct .[8]
   403 ;;  Van             8   20[BANK0 ] unsigned char [8]
   404 ;;  GP              2   44[BANK0 ] struct .
   405 ;;  sta_cruz        2   42[BANK0 ] struct .
   406 ;;  san_pablo       2   40[BANK0 ] struct .
   407 ;;  cabuyao         2   38[BANK0 ] struct .
   408 ;;  los_banos       2   36[BANK0 ] struct .
   409 ;;  calamba         2   34[BANK0 ] struct .
   410 ;;  san_pedro       2   32[BANK0 ] struct .
   411 ;;  binan           2   30[BANK0 ] struct .
   412 ;;  sta_rosa        2   28[BANK0 ] struct .
   413 ;; Return value:  Size  Location     Type
   414 ;;                  2    7[COMMON] int 
   415 ;; Registers used:
   416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : B00/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         4       0       0       0       0
   423 ;;      Locals:         0      42       0       0       0
   424 ;;      Temps:          0       4       0       0       0
   425 ;;      Totals:         4      46       0       0       0
   426 ;;Total ram usage:       50 bytes
   427 ;; Hardware stack levels required when called:    2
   428 ;; This function calls:
   429 ;;		_initSystem
   430 ;;		_readFLASH
   431 ;;		_writeFLASHWr8
   432 ;; This function is called by:
   433 ;;		Startup code after reset
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           
   438                           ;psect for function _main
   439  0700                     _main:	
   440                           
   441                           ;main.c: 115: initSystem();
   442                           
   443                           ;incstack = 0
   444                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   445  0700  120A  118A  2655  120A  118A  	fcall	_initSystem
   446                           
   447                           ;main.c: 116: word GP;
   448                           ;main.c: 117: word Chix[8] = {{0x00,'A'},
   449                           ;main.c: 118: {0x00,'B'},
   450                           ;main.c: 119: {0x00,'C'},
   451                           ;main.c: 120: {0x00,'D'},
   452                           ;main.c: 121: {0x00,'E'},
   453                           ;main.c: 122: {0x00,'F'},
   454                           ;main.c: 123: {0x00,'G'},
   455                           ;main.c: 124: {0x00,'H'}};
   456  0705  3024               	movlw	main@Chix& (0+255)
   457  0706  0084               	movwf	4
   458  0707  304E               	movlw	low main@F1849
   459  0708  1283               	bcf	3,5	;RP0=0, select bank0
   460  0709  1303               	bcf	3,6	;RP1=0, select bank0
   461  070A  00A0               	movwf	??_main
   462  070B  0804               	movf	4,w
   463  070C  00A1               	movwf	??_main+1
   464  070D  3010               	movlw	16
   465  070E  00A2               	movwf	??_main+2
   466  070F                     u100:	
   467  070F  0820               	movf	??_main,w
   468  0710  0084               	movwf	4
   469  0711  1383               	bcf	3,7	;select IRP bank0
   470  0712  0800               	movf	0,w
   471  0713  00A3               	movwf	??_main+3
   472  0714  0AA0               	incf	??_main,f
   473  0715  0821               	movf	??_main+1,w
   474  0716  0084               	movwf	4
   475  0717  0823               	movf	??_main+3,w
   476  0718  0080               	movwf	0
   477  0719  0AA1               	incf	??_main+1,f
   478  071A  0BA2               	decfsz	??_main+2,f
   479  071B  2F0F               	goto	u100
   480                           
   481                           ;main.c: 125: char Van[8];
   482                           ;main.c: 128: destination_address sta_cruz = {0x1E, 0x80};
   483  071C  087D               	movf	main@F1852+1,w
   484  071D  00CB               	movwf	main@sta_cruz+1
   485  071E  087C               	movf	main@F1852,w
   486  071F  00CA               	movwf	main@sta_cruz
   487                           
   488                           ;main.c: 129: destination_address sta_rosa = {0x1E, 0x81};
   489  0720  086B               	movf	main@F1854+1,w
   490  0721  00BD               	movwf	main@sta_rosa+1
   491  0722  086A               	movf	main@F1854,w
   492  0723  00BC               	movwf	main@sta_rosa
   493                           
   494                           ;main.c: 130: destination_address binan = {0x1E, 0x82};
   495  0724  0869               	movf	main@F1856+1,w
   496  0725  00BF               	movwf	main@binan+1
   497  0726  0868               	movf	main@F1856,w
   498  0727  00BE               	movwf	main@binan
   499                           
   500                           ;main.c: 131: destination_address san_pedro = {0x1E, 0x83};
   501  0728  0867               	movf	main@F1858+1,w
   502  0729  00C1               	movwf	main@san_pedro+1
   503  072A  0866               	movf	main@F1858,w
   504  072B  00C0               	movwf	main@san_pedro
   505                           
   506                           ;main.c: 132: destination_address calamba = {0x1E, 0x84};
   507  072C  0865               	movf	main@F1860+1,w
   508  072D  00C3               	movwf	main@calamba+1
   509  072E  0864               	movf	main@F1860,w
   510  072F  00C2               	movwf	main@calamba
   511                           
   512                           ;main.c: 133: destination_address los_banos = {0x1E, 0x85};
   513  0730  0863               	movf	main@F1862+1,w
   514  0731  00C5               	movwf	main@los_banos+1
   515  0732  0862               	movf	main@F1862,w
   516  0733  00C4               	movwf	main@los_banos
   517                           
   518                           ;main.c: 134: destination_address cabuyao = {0x1E, 0x86};
   519  0734  0861               	movf	main@F1864+1,w
   520  0735  00C7               	movwf	main@cabuyao+1
   521  0736  0860               	movf	main@F1864,w
   522  0737  00C6               	movwf	main@cabuyao
   523                           
   524                           ;main.c: 135: destination_address san_pablo = {0x1E, 0x87};
   525  0738  085F               	movf	main@F1866+1,w
   526  0739  00C9               	movwf	main@san_pablo+1
   527  073A  085E               	movf	main@F1866,w
   528  073B  00C8               	movwf	main@san_pablo
   529                           
   530                           ;main.c: 137: writeFLASHWr8(sta_cruz, &Chix);
   531  073C  084B               	movf	main@sta_cruz+1,w
   532  073D  00F2               	movwf	writeFLASHWr8@addr+1
   533  073E  084A               	movf	main@sta_cruz,w
   534  073F  00F1               	movwf	writeFLASHWr8@addr
   535  0740  3024               	movlw	(low (main@Chix| 0))& (0+255)
   536  0741  00A0               	movwf	??_main
   537  0742  0820               	movf	??_main,w
   538  0743  00F3               	movwf	writeFLASHWr8@PMBYTE
   539  0744  120A  118A  26B0  120A  118A  	fcall	_writeFLASHWr8
   540                           
   541                           ;main.c: 139: readFLASH(sta_cruz, &GP);
   542  0749  1283               	bcf	3,5	;RP0=0, select bank0
   543  074A  1303               	bcf	3,6	;RP1=0, select bank0
   544  074B  084B               	movf	main@sta_cruz+1,w
   545  074C  00F2               	movwf	readFLASH@addr+1
   546  074D  084A               	movf	main@sta_cruz,w
   547  074E  00F1               	movwf	readFLASH@addr
   548  074F  304C               	movlw	(low (main@GP| 0))& (0+255)
   549  0750  00A0               	movwf	??_main
   550  0751  0820               	movf	??_main,w
   551  0752  00F3               	movwf	readFLASH@PMBYTE
   552  0753  120A  118A  2675  120A  118A  	fcall	_readFLASH
   553                           
   554                           ;main.c: 140: Van[0] = GP.LOWBYTE;
   555  0758  1283               	bcf	3,5	;RP0=0, select bank0
   556  0759  1303               	bcf	3,6	;RP1=0, select bank0
   557  075A  084D               	movf	main@GP+1,w
   558  075B  00A0               	movwf	??_main
   559  075C  0820               	movf	??_main,w
   560  075D  00B4               	movwf	main@Van
   561                           
   562                           ;main.c: 142: readFLASH(sta_rosa, &GP);
   563  075E  083D               	movf	main@sta_rosa+1,w
   564  075F  00F2               	movwf	readFLASH@addr+1
   565  0760  083C               	movf	main@sta_rosa,w
   566  0761  00F1               	movwf	readFLASH@addr
   567  0762  304C               	movlw	(low (main@GP| 0))& (0+255)
   568  0763  00A0               	movwf	??_main
   569  0764  0820               	movf	??_main,w
   570  0765  00F3               	movwf	readFLASH@PMBYTE
   571  0766  120A  118A  2675  120A  118A  	fcall	_readFLASH
   572                           
   573                           ;main.c: 143: Van[1] = GP.LOWBYTE;
   574  076B  1283               	bcf	3,5	;RP0=0, select bank0
   575  076C  1303               	bcf	3,6	;RP1=0, select bank0
   576  076D  084D               	movf	main@GP+1,w
   577  076E  00A0               	movwf	??_main
   578  076F  0820               	movf	??_main,w
   579  0770  00B5               	movwf	main@Van+1
   580                           
   581                           ;main.c: 145: readFLASH(binan, &GP);
   582  0771  083F               	movf	main@binan+1,w
   583  0772  00F2               	movwf	readFLASH@addr+1
   584  0773  083E               	movf	main@binan,w
   585  0774  00F1               	movwf	readFLASH@addr
   586  0775  304C               	movlw	(low (main@GP| 0))& (0+255)
   587  0776  00A0               	movwf	??_main
   588  0777  0820               	movf	??_main,w
   589  0778  00F3               	movwf	readFLASH@PMBYTE
   590  0779  120A  118A  2675  120A  118A  	fcall	_readFLASH
   591                           
   592                           ;main.c: 146: Van[2] = GP.LOWBYTE;
   593  077E  1283               	bcf	3,5	;RP0=0, select bank0
   594  077F  1303               	bcf	3,6	;RP1=0, select bank0
   595  0780  084D               	movf	main@GP+1,w
   596  0781  00A0               	movwf	??_main
   597  0782  0820               	movf	??_main,w
   598  0783  00B6               	movwf	main@Van+2
   599                           
   600                           ;main.c: 148: readFLASH(san_pedro, &GP);
   601  0784  0841               	movf	main@san_pedro+1,w
   602  0785  00F2               	movwf	readFLASH@addr+1
   603  0786  0840               	movf	main@san_pedro,w
   604  0787  00F1               	movwf	readFLASH@addr
   605  0788  304C               	movlw	(low (main@GP| 0))& (0+255)
   606  0789  00A0               	movwf	??_main
   607  078A  0820               	movf	??_main,w
   608  078B  00F3               	movwf	readFLASH@PMBYTE
   609  078C  120A  118A  2675  120A  118A  	fcall	_readFLASH
   610                           
   611                           ;main.c: 149: Van[3] = GP.LOWBYTE;
   612  0791  1283               	bcf	3,5	;RP0=0, select bank0
   613  0792  1303               	bcf	3,6	;RP1=0, select bank0
   614  0793  084D               	movf	main@GP+1,w
   615  0794  00A0               	movwf	??_main
   616  0795  0820               	movf	??_main,w
   617  0796  00B7               	movwf	main@Van+3
   618                           
   619                           ;main.c: 151: readFLASH(calamba, &GP);
   620  0797  0843               	movf	main@calamba+1,w
   621  0798  00F2               	movwf	readFLASH@addr+1
   622  0799  0842               	movf	main@calamba,w
   623  079A  00F1               	movwf	readFLASH@addr
   624  079B  304C               	movlw	(low (main@GP| 0))& (0+255)
   625  079C  00A0               	movwf	??_main
   626  079D  0820               	movf	??_main,w
   627  079E  00F3               	movwf	readFLASH@PMBYTE
   628  079F  120A  118A  2675  120A  118A  	fcall	_readFLASH
   629                           
   630                           ;main.c: 152: Van[4] = GP.LOWBYTE;
   631  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   632  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   633  07A6  084D               	movf	main@GP+1,w
   634  07A7  00A0               	movwf	??_main
   635  07A8  0820               	movf	??_main,w
   636  07A9  00B8               	movwf	main@Van+4
   637                           
   638                           ;main.c: 154: readFLASH(los_banos, &GP);
   639  07AA  0845               	movf	main@los_banos+1,w
   640  07AB  00F2               	movwf	readFLASH@addr+1
   641  07AC  0844               	movf	main@los_banos,w
   642  07AD  00F1               	movwf	readFLASH@addr
   643  07AE  304C               	movlw	(low (main@GP| 0))& (0+255)
   644  07AF  00A0               	movwf	??_main
   645  07B0  0820               	movf	??_main,w
   646  07B1  00F3               	movwf	readFLASH@PMBYTE
   647  07B2  120A  118A  2675  120A  118A  	fcall	_readFLASH
   648                           
   649                           ;main.c: 155: Van[5] = GP.LOWBYTE;
   650  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   651  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   652  07B9  084D               	movf	main@GP+1,w
   653  07BA  00A0               	movwf	??_main
   654  07BB  0820               	movf	??_main,w
   655  07BC  00B9               	movwf	main@Van+5
   656                           
   657                           ;main.c: 157: readFLASH(cabuyao, &GP);
   658  07BD  0847               	movf	main@cabuyao+1,w
   659  07BE  00F2               	movwf	readFLASH@addr+1
   660  07BF  0846               	movf	main@cabuyao,w
   661  07C0  00F1               	movwf	readFLASH@addr
   662  07C1  304C               	movlw	(low (main@GP| 0))& (0+255)
   663  07C2  00A0               	movwf	??_main
   664  07C3  0820               	movf	??_main,w
   665  07C4  00F3               	movwf	readFLASH@PMBYTE
   666  07C5  120A  118A  2675  120A  118A  	fcall	_readFLASH
   667                           
   668                           ;main.c: 158: Van[6] = GP.LOWBYTE;
   669  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   670  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   671  07CC  084D               	movf	main@GP+1,w
   672  07CD  00A0               	movwf	??_main
   673  07CE  0820               	movf	??_main,w
   674  07CF  00BA               	movwf	main@Van+6
   675                           
   676                           ;main.c: 160: readFLASH(san_pablo, &GP);
   677  07D0  0849               	movf	main@san_pablo+1,w
   678  07D1  00F2               	movwf	readFLASH@addr+1
   679  07D2  0848               	movf	main@san_pablo,w
   680  07D3  00F1               	movwf	readFLASH@addr
   681  07D4  304C               	movlw	(low (main@GP| 0))& (0+255)
   682  07D5  00A0               	movwf	??_main
   683  07D6  0820               	movf	??_main,w
   684  07D7  00F3               	movwf	readFLASH@PMBYTE
   685  07D8  120A  118A  2675  120A  118A  	fcall	_readFLASH
   686                           
   687                           ;main.c: 161: Van[7] = GP.LOWBYTE;
   688  07DD  1283               	bcf	3,5	;RP0=0, select bank0
   689  07DE  1303               	bcf	3,6	;RP1=0, select bank0
   690  07DF  084D               	movf	main@GP+1,w
   691  07E0  00A0               	movwf	??_main
   692  07E1  0820               	movf	??_main,w
   693  07E2  00BB               	movwf	main@Van+7
   694  07E3                     l64:	
   695                           ;main.c: 163: while(1);
   696                           
   697  07E3  2FE3               	goto	l64
   698  07E4                     __end_of_main:	
   699                           ;main.c: 164: return (0);
   700                           ;	Return value of _main is never used
   701                           
   702                           
   703                           	psect	text1
   704  06B0                     __ptext1:	
   705 ;; *************** function _writeFLASHWr8 *****************
   706 ;; Defined at:
   707 ;;		line 72 in file "main.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  addr            2    0[COMMON] struct .
   710 ;;  PMBYTE          1    2[COMMON] PTR struct .
   711 ;;		 -> main@Chix(16), 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  i               2    5[COMMON] int 
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   723 ;;      Params:         3       0       0       0       0
   724 ;;      Locals:         2       0       0       0       0
   725 ;;      Temps:          2       0       0       0       0
   726 ;;      Totals:         7       0       0       0       0
   727 ;;Total ram usage:        7 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_main
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           
   737                           ;psect for function _writeFLASHWr8
   738  06B0                     _writeFLASHWr8:	
   739                           
   740                           ;main.c: 77: EEADR = addr.LSB;
   741                           
   742                           ;incstack = 0
   743                           ; Regs used in _writeFLASHWr8: [wreg-fsr0h+status,2+status,0+btemp+1]
   744  06B0  0872               	movf	writeFLASHWr8@addr+1,w
   745  06B1  1283               	bcf	3,5	;RP0=0, select bank2
   746  06B2  1703               	bsf	3,6	;RP1=1, select bank2
   747  06B3  008D               	movwf	13	;volatile
   748                           
   749                           ;main.c: 78: EEADRH = addr.MSB;
   750  06B4  0871               	movf	writeFLASHWr8@addr,w
   751  06B5  393F               	andlw	63
   752  06B6  008F               	movwf	15	;volatile
   753                           
   754                           ;main.c: 80: for(int i = 0; i < 8; i++){
   755  06B7  01F6               	clrf	writeFLASHWr8@i
   756  06B8  01F7               	clrf	writeFLASHWr8@i+1
   757  06B9                     L2:	
   758  06B9  0877               	movf	writeFLASHWr8@i+1,w
   759  06BA  3A80               	xorlw	128
   760  06BB  00FF               	movwf	127
   761  06BC  3080               	movlw	128
   762  06BD  027F               	subwf	127,w
   763  06BE  1D03               	skipz
   764  06BF  2EC2               	goto	u65
   765  06C0  3008               	movlw	8
   766  06C1  0276               	subwf	writeFLASHWr8@i,w
   767  06C2                     u65:	
   768  06C2  1803               	btfsc	3,0
   769  06C3  0008               	return
   770                           
   771                           ;main.c: 81: EEDATA = PMBYTE[i].LOWBYTE;
   772  06C4  0876               	movf	writeFLASHWr8@i,w
   773  06C5  00F4               	movwf	??_writeFLASHWr8
   774  06C6  0774               	addwf	??_writeFLASHWr8,w
   775  06C7  0773               	addwf	writeFLASHWr8@PMBYTE,w
   776  06C8  00F5               	movwf	??_writeFLASHWr8+1
   777  06C9  0A75               	incf	??_writeFLASHWr8+1,w
   778  06CA  0084               	movwf	4
   779  06CB  1383               	bcf	3,7	;select IRP bank0
   780  06CC  0800               	movf	0,w
   781  06CD  1283               	bcf	3,5	;RP0=0, select bank2
   782  06CE  1703               	bsf	3,6	;RP1=1, select bank2
   783  06CF  008C               	movwf	12	;volatile
   784                           
   785                           ;main.c: 82: EEDATH = PMBYTE[i].HIGHBYTE;
   786  06D0  0876               	movf	writeFLASHWr8@i,w
   787  06D1  00F4               	movwf	??_writeFLASHWr8
   788  06D2  0774               	addwf	??_writeFLASHWr8,w
   789  06D3  0773               	addwf	writeFLASHWr8@PMBYTE,w
   790  06D4  00F5               	movwf	??_writeFLASHWr8+1
   791  06D5  0875               	movf	??_writeFLASHWr8+1,w
   792  06D6  0084               	movwf	4
   793  06D7  0800               	movf	0,w
   794  06D8  393F               	andlw	63
   795  06D9  008E               	movwf	14	;volatile
   796                           
   797                           ;main.c: 84: EECON1bits.EEPGD = 1;
   798  06DA  1683               	bsf	3,5	;RP0=1, select bank3
   799  06DB  1703               	bsf	3,6	;RP1=1, select bank3
   800  06DC  178C               	bsf	12,7	;volsfr
   801                           
   802                           ;main.c: 85: EECON1bits.WREN = 1;
   803  06DD  150C               	bsf	12,2	;volsfr
   804                           
   805                           ;main.c: 86: if(INTCONbits.GIE){
   806  06DE  1F8B               	btfss	11,7	;volatile
   807  06DF  2EE4               	goto	L1
   808                           
   809                           ;main.c: 87: STATUSbits.CARRY = 1;
   810  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   811  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   812  06E2  1403               	bsf	3,0	;volatile
   813                           
   814                           ;main.c: 88: }
   815                           ;main.c: 89: GIE = 0;
   816  06E3  138B               	bcf	11,7	;volatile
   817  06E4                     L1:	
   818                           
   819                           ;main.c: 91: EECON2 = 0x55;
   820  06E4  3055               	movlw	85
   821  06E5  1683               	bsf	3,5	;RP0=1, select bank3
   822  06E6  1703               	bsf	3,6	;RP1=1, select bank3
   823  06E7  008D               	movwf	13	;volsfr
   824                           
   825                           ;main.c: 92: EECON2 = 0xAA;
   826  06E8  30AA               	movlw	170
   827  06E9  008D               	movwf	13	;volsfr
   828                           
   829                           ;main.c: 93: EECON1bits.WR = 1;
   830  06EA  148C               	bsf	12,1	;volsfr
   831                           
   832                           ;main.c: 94: _delay(2);
   833  06EB  2EEC               	nop2	;2 cycle nop
   834                           
   835                           ;main.c: 95: EECON1bits.WREN = 0;
   836  06EC  1683               	bsf	3,5	;RP0=1, select bank3
   837  06ED  1703               	bsf	3,6	;RP1=1, select bank3
   838  06EE  110C               	bcf	12,2	;volsfr
   839                           
   840                           ;main.c: 96: if(STATUSbits.CARRY){
   841  06EF  1283               	bcf	3,5	;RP0=0, select bank0
   842  06F0  1303               	bcf	3,6	;RP1=0, select bank0
   843  06F1  1803               	btfsc	3,0	;volatile
   844                           
   845                           ;main.c: 97: GIE = 1;
   846  06F2  178B               	bsf	11,7	;volatile
   847                           
   848                           ;main.c: 98: }
   849                           ;main.c: 100: EEADR++;
   850  06F3  3001               	movlw	1
   851  06F4  00F4               	movwf	??_writeFLASHWr8
   852  06F5  0874               	movf	??_writeFLASHWr8,w
   853  06F6  1283               	bcf	3,5	;RP0=0, select bank2
   854  06F7  1703               	bsf	3,6	;RP1=1, select bank2
   855  06F8  078D               	addwf	13,f	;volatile
   856  06F9  3001               	movlw	1
   857  06FA  07F6               	addwf	writeFLASHWr8@i,f
   858  06FB  1803               	skipnc
   859  06FC  0AF7               	incf	writeFLASHWr8@i+1,f
   860  06FD  3000               	movlw	0
   861  06FE  07F7               	addwf	writeFLASHWr8@i+1,f
   862  06FF  2EB9               	goto	L2
   863  0700                     __end_of_writeFLASHWr8:	
   864                           
   865                           	psect	text2
   866  0675                     __ptext2:	
   867 ;; *************** function _readFLASH *****************
   868 ;; Defined at:
   869 ;;		line 184 in file "main.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  addr            2    0[COMMON] struct .
   872 ;;  PMBYTE          1    2[COMMON] PTR struct .
   873 ;;		 -> main@GP(2), 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   885 ;;      Params:         3       0       0       0       0
   886 ;;      Locals:         0       0       0       0       0
   887 ;;      Temps:          1       0       0       0       0
   888 ;;      Totals:         4       0       0       0       0
   889 ;;Total ram usage:        4 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           
   899                           ;psect for function _readFLASH
   900  0675                     _readFLASH:	
   901                           
   902                           ;main.c: 185: EEADR = addr.LSB;
   903                           
   904                           ;incstack = 0
   905                           ; Regs used in _readFLASH: [wreg-fsr0h+status,2+status,0]
   906  0675  0872               	movf	readFLASH@addr+1,w
   907  0676  1283               	bcf	3,5	;RP0=0, select bank2
   908  0677  1703               	bsf	3,6	;RP1=1, select bank2
   909  0678  008D               	movwf	13	;volatile
   910                           
   911                           ;main.c: 186: EEADRH = addr.MSB;
   912  0679  0871               	movf	readFLASH@addr,w
   913  067A  393F               	andlw	63
   914  067B  008F               	movwf	15	;volatile
   915                           
   916                           ;main.c: 187: EEPGD = 1;
   917  067C  1683               	bsf	3,5	;RP0=1, select bank3
   918  067D  1703               	bsf	3,6	;RP1=1, select bank3
   919  067E  178C               	bsf	12,7	;volsfr
   920                           
   921                           ;main.c: 188: RD = 1;
   922  067F  140C               	bsf	12,0	;volsfr
   923                           
   924                           ;main.c: 189: _delay(2);
   925  0680  2E81               	nop2	;2 cycle nop
   926                           
   927                           ;main.c: 190: PMBYTE->LOWBYTE = EEDAT;
   928  0681  1283               	bcf	3,5	;RP0=0, select bank2
   929  0682  1703               	bsf	3,6	;RP1=1, select bank2
   930  0683  080C               	movf	12,w	;volatile
   931  0684  00F4               	movwf	??_readFLASH
   932  0685  0A73               	incf	readFLASH@PMBYTE,w
   933  0686  0084               	movwf	4
   934  0687  0874               	movf	??_readFLASH,w
   935  0688  1383               	bcf	3,7	;select IRP bank0
   936  0689  0080               	movwf	0
   937                           
   938                           ;main.c: 191: PMBYTE->HIGHBYTE = EEDATH;
   939  068A  0873               	movf	readFLASH@PMBYTE,w
   940  068B  0084               	movwf	4
   941  068C  0800               	movf	0,w
   942  068D  060E               	xorwf	14,w	;volatile
   943  068E  39C0               	andlw	-64
   944  068F  060E               	xorwf	14,w	;volatile
   945  0690  0080               	movwf	0
   946  0691  0008               	return
   947  0692                     __end_of_readFLASH:	
   948                           
   949                           	psect	text3
   950  0655                     __ptext3:	
   951 ;; *************** function _initSystem *****************
   952 ;; Defined at:
   953 ;;		line 172 in file "main.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, status,2, status,0, pclath, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0
   969 ;;      Temps:          0       0       0       0       0
   970 ;;      Totals:         0       0       0       0       0
   971 ;;Total ram usage:        0 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; Hardware stack levels required when called:    1
   974 ;; This function calls:
   975 ;;		_initOSC
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _initSystem
   983  0655                     _initSystem:	
   984                           
   985                           ;main.c: 173: initOSC();
   986                           
   987                           ;incstack = 0
   988                           ; Regs used in _initSystem: [wreg+status,2+status,0+pclath+cstack]
   989  0655  120A  118A  2659   	fcall	_initOSC
   990  0658  0008               	return
   991  0659                     __end_of_initSystem:	
   992                           
   993                           	psect	text4
   994  0659                     __ptext4:	
   995 ;; *************** function _initOSC *****************
   996 ;; Defined at:
   997 ;;		line 176 in file "main.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0
  1014 ;;      Totals:         0       0       0       0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_initSystem
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _initOSC
  1026  0659                     _initOSC:	
  1027                           
  1028                           ;main.c: 177: OSCCONbits.IRCF = 0b110;
  1029                           
  1030                           ;incstack = 0
  1031                           ; Regs used in _initOSC: [wreg+status,2+status,0]
  1032  0659  1683               	bsf	3,5	;RP0=1, select bank1
  1033  065A  1303               	bcf	3,6	;RP1=0, select bank1
  1034  065B  080F               	movf	15,w	;volatile
  1035  065C  398F               	andlw	-113
  1036  065D  3860               	iorlw	96
  1037  065E  008F               	movwf	15	;volatile
  1038                           
  1039                           ;main.c: 178: OSCCONbits.OSTS = 0;
  1040  065F  118F               	bcf	15,3	;volatile
  1041                           
  1042                           ;main.c: 179: OSCCONbits.HTS = 1;
  1043  0660  150F               	bsf	15,2	;volatile
  1044                           
  1045                           ;main.c: 180: OSCCONbits.LTS = 1;
  1046  0661  148F               	bsf	15,1	;volatile
  1047                           
  1048                           ;main.c: 181: OSCCONbits.SCS = 1;
  1049  0662  140F               	bsf	15,0	;volatile
  1050  0663  0008               	return
  1051  0664                     __end_of_initOSC:	
  1052  007E                     btemp	set	126	;btemp
  1053  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     11      13
    BANK0            80     46      76
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    readFLASH@PMBYTE	PTR struct . size(1) Largest target is 2
		 -> main@GP(BANK0[2]), 

    writeFLASHWr8@PMBYTE	PTR struct . size(1) Largest target is 16
		 -> main@Chix(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_writeFLASHWr8

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    46      4    1985
                                              7 COMMON     4     0      4
                                              0 BANK0     46    46      0
                         _initSystem
                          _readFLASH
                      _writeFLASHWr8
 ---------------------------------------------------------------------------------
 (1) _writeFLASHWr8                                        7     4      3     285
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (1) _readFLASH                                            4     1      3     937
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _initSystem                                           0     0      0       0
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initSystem
     _initOSC
   _readFLASH
   _writeFLASHWr8

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2E      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      B       D       1      100.0%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      12        0.0%
ABS                  0      0      59       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Aug 02 10:52:59 2017

                       pc 0002               __CFG_CP$OFF 0000                        l64 07E3  
                      _RD 0C60                        u65 06C2                        fsr 0004  
                     _GIE 005F                       u100 070F              __CFG_CPD$OFF 0000  
                     fsr0 0004                       indf 0000              __CFG_IESO$ON 0000  
             main@calamba 0042               main@cabuyao 0046              __CFG_LVP$OFF 0000  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 0700  
                    btemp 007E                      start 0001             __CFG_MCLRE$ON 0000  
                   ?_main 0078                     _EEADR 010D                     _EEDAT 010C  
           __CFG_WDTE$OFF 0000                     _EEPGD 0C67           __end_of_initOSC 0664  
          __CFG_BOREN$OFF 0000                     pclath 000A         writeFLASHWr8@addr 0071  
            main@sta_cruz 004A              main@sta_rosa 003C                     status 0003  
                   wtemp0 007E           __initialization 07E4              __end_of_main 07E4  
                  ??_main 0020                    _EEADRH 010F                    _EEDATA 010C  
                  _EEDATH 010E                    _EECON2 018D    __size_of_writeFLASHWr8 0050  
          __CFG_PWRTE$OFF 0000             main@san_pablo 0048             main@san_pedro 0040  
           main@los_banos 0044                    main@GP 004C                 ??_initOSC 0071  
            __pdataCOMMON 007C   __end_of__initialization 07FC            __pcstackCOMMON 0071  
            __pidataBANK0 0692             _writeFLASHWr8 06B0        __size_of_readFLASH 001D  
              __pmaintext 0700            ?_writeFLASHWr8 0071                _initSystem 0655  
       __end_of_readFLASH 0692                   __ptext1 06B0                   __ptext2 0675  
                 __ptext3 0655                   __ptext4 0659                   _initOSC 0659  
     writeFLASHWr8@PMBYTE 0073                   main@Van 0034      end_of_initialization 07FC  
         ??_writeFLASHWr8 0074             readFLASH@addr 0071               ?_initSystem 0071  
           __pidataCOMMON 0653       start_initialization 07E4  __CFG_FOSC$INTRC_NOCLKOUT 0000  
              init_fetch0 0664               __pdataBANK0 004E                 ___latbits 0002  
           __pcstackBANK0 0020            writeFLASHWr8@i 0076       __size_of_initSystem 0004  
                ?_initOSC 0071                 _readFLASH 0675                 main@F1860 0064  
               main@F1852 007C                 main@F1854 006A                 main@F1862 0062  
               main@F1856 0068                 main@F1864 0060                 main@F1849 004E  
               main@F1858 0066                 main@F1866 005E                 main@binan 003E  
              ?_readFLASH 0071                _EECON1bits 018C     __end_of_writeFLASHWr8 0700  
            ??_initSystem 0071          __size_of_initOSC 000B         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 00E4        __end_of_initSystem 0659           readFLASH@PMBYTE 0073  
                main@Chix 0024                  main@argc 0078                  main@argv 007A  
             ??_readFLASH 0074                _INTCONbits 000B                  init_ram0 0668  
              _OSCCONbits 008F                _STATUSbits 0003  
